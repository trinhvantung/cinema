server.port=5000
server.servlet.context-path=/api/show-service
spring.application.name=show-service
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.password=trinhvantung
spring.datasource.url=jdbc:mariadb://localhost:3306/cinema_show
spring.datasource.username=root
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

grpc.server.port=5500


grpc.client.cinemaService.address=static://localhost:3500
grpc.client.cinemaService.negotiationType=plaintext


grpc.client.movieService.address=static://localhost:4500
grpc.client.movieService.negotiationType=plaintext


eureka.client.service-url.default-zone=http://localhost:8761/eureka

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/master

#spring.security.oauth2.client.registration.server.client-id=secret
#spring.security.oauth2.client.registration.server.provider=server-provider
#spring.security.oauth2.client.registration.server.client-secret=12345
#spring.security.oauth2.client.registration.server.scope=<scope>
#spring.security.oauth2.client.registration.server.authorization-grant-type=client_credentials
#
#spring.security.oauth2.client.provider.server-provider.token-uri=http://localhost:8080/realms/master/protocol/openid-connect/token
#spring.security.oauth2.client.provider.server-provider.issuer-uri=http://localhost:8080/realms/master


#spring.security.oauth2.client.registration.client-credentials.client-id=secret
#spring.security.oauth2.client.registration.client-credentials.client-secret=12345
#spring.security.oauth2.client.registration.server.scope=server
#spring.security.oauth2.client.provider.authorization-server.token-uri=http://localhost:8080/realms/master/protocol/openid-connect/token



#spring.security.oauth2.client.registration.client-credentials.client-id=server
#spring.security.oauth2.client.registration.client-credentials.client-secret=12345
#spring.security.oauth2.client.registration.client-credentials.scope=server
#spring.security.oauth2.client.registration.client-credentials.client-name=server
#spring.security.oauth2.client.provider.client-credentials.authorization-uri=http://your-auth-server.com/oauth/authorize
#spring.security.oauth2.client.provider.client-credentials.token-uri=http://localhost:8080/realms/master/protocol/openid-connect/token
#spring.security.oauth2.client.provider.client-credentials.user-info-uri=http://your-auth-server.com/userinfo
#spring.security.oauth2.client.provider.client-credentials.user-name-attribute=sub




#security.oauth2.client.clientId=server
#security.oauth2.client.clientSecret=secret
#security.oauth2.client.grantType=client_credentials
#security.oauth2.client.scope=server
#security.oauth2.client.accessTokenUri=http://localhost:8080/auth-service/oauth/token
